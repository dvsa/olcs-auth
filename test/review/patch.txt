diff --git a/config/language/en_GB.php b/config/language/en_GB.php
index 3565321..337798b 100644
--- a/config/language/en_GB.php
+++ b/config/language/en_GB.php
@@ -26,6 +26,7 @@ return [
     'auth.forgot-password.button' => 'Submit',
     'auth.forgot-password.failed.title' => 'Failed to reset your password',
     'auth.forgot-password.failed.reason.User not found' => 'Please check your username',
+    'auth.forgot-password.failed.reason.unknown-error' => 'An error occurred, please try again',
     'auth.confirm-forgot-password.title' => 'Check your email',
     'auth.forgot-password.email.subject' => 'Reset your password',
     'auth.forgot-password.email.message' => 'Please follow the link below to reset your password',
diff --git a/src/Controller/ForgotPasswordController.php b/src/Controller/ForgotPasswordController.php
index 25a050d..55ab3b0 100644
--- a/src/Controller/ForgotPasswordController.php
+++ b/src/Controller/ForgotPasswordController.php
@@ -11,6 +11,7 @@ use Zend\Mvc\Controller\AbstractActionController;
 use Dvsa\Olcs\Auth\Form\ForgotPasswordForm;
 use Zend\View\Model\ViewModel;
 use Dvsa\Olcs\Auth\Service\Auth\ForgotPasswordService;
+use Dvsa\Olcs\Transfer\Query\User\Pid;
 
 /**
  * Forgot Password Controller
@@ -43,10 +44,13 @@ class ForgotPasswordController extends AbstractActionController
 
         $data = $form->getData();
 
-        $result = $this->getForgotPasswordService()->forgotPassword($data['username']);
+        $response = $this->handleQuery(Pid::create(['id' => $data['username']]));
+
+        if ($response->isOk()) {
+            $result = $this->getForgotPasswordService()->forgotPassword($response->getResult()['pid']);
 
             /**
-         * Rather then redirecting, we show a different view in this case, that way the screen can only be shown
+             * Rather than redirecting, we show a different view in this case, that way the screen can only be shown
              * when a successful request has occurred
              */
             if ($result['status'] == 200) {
@@ -55,9 +59,20 @@ class ForgotPasswordController extends AbstractActionController
                 $view->setTemplate('auth/confirm-forgot-password');
 
                 return $view;
+            } else {
+                $message = $result['message'];
+            }
+
+        } else {
+            if ($response->isClientError()) {
+                // Mimic the OpenAM error message
+                $message = 'User not found';
+            } else {
+                $message = 'unknown-error';
+            }
         }
 
-        return $this->renderView($form, true, $result['message']);
+        return $this->renderView($form, true, $message);
     }
 
     /**
diff --git a/src/Controller/LoginController.php b/src/Controller/LoginController.php
index bbd4f46..db7ffa3 100644
--- a/src/Controller/LoginController.php
+++ b/src/Controller/LoginController.php
@@ -7,13 +7,12 @@
  */
 namespace Dvsa\Olcs\Auth\Controller;
 
+use Dvsa\Olcs\Auth\Controller\Traits\Authenticate;
 use Dvsa\Olcs\Auth\Form\LoginForm;
 use Zend\Http\Request;
 use Zend\Http\Response;
 use Zend\Mvc\Controller\AbstractActionController;
 use Zend\View\Model\ViewModel;
-use Dvsa\Olcs\Auth\Service\Auth\AuthenticationService;
-use Dvsa\Olcs\Auth\Service\Auth\LoginService;
 
 /**
  * Login Controller
@@ -22,6 +21,8 @@ use Dvsa\Olcs\Auth\Service\Auth\LoginService;
  */
 class LoginController extends AbstractActionController
 {
+    use Authenticate;
+
     /**
      * Login page
      *
@@ -46,18 +47,13 @@ class LoginController extends AbstractActionController
 
         $data = $form->getData();
 
-        $result = $this->getAuthenticationService()->authenticate($data['username'], $data['password']);
-
-        if ($result['status'] != 200) {
+        return $this->authenticate(
+            $data['username'],
+            $data['password'],
+            function ($result) use ($form) {
                 return $this->renderView($form, true, ($result['status'] == 401 ? $result['message'] : 'unknown-reason'));
             }
-
-        if (isset($result['tokenId'])) {
-            return $this->getLoginService()
-                ->login($result['tokenId'], $this->getResponse());
-        }
-
-        return $this->redirect()->toRoute('auth/expired-password', ['authId' => $result['authId']]);
+        );
     }
 
     /**
@@ -78,26 +74,6 @@ class LoginController extends AbstractActionController
     }
 
     /**
-     * Get authentication service
-     *
-     * @return AuthenticationService
-     */
-    private function getAuthenticationService()
-    {
-        return $this->getServiceLocator()->get('Auth\AuthenticationService');
-    }
-
-    /**
-     * Get login service
-     *
-     * @return LoginService
-     */
-    private function getLoginService()
-    {
-        return $this->getServiceLocator()->get('Auth\LoginService');
-    }
-
-    /**
      * Check if the request is post, and whether it looks like it's a post from our login form
      *
      * @param Request $request
diff --git a/src/Controller/ResetPasswordController.php b/src/Controller/ResetPasswordController.php
index 3986f7e..869853f 100644
--- a/src/Controller/ResetPasswordController.php
+++ b/src/Controller/ResetPasswordController.php
@@ -7,6 +7,7 @@
  */
 namespace Dvsa\Olcs\Auth\Controller;
 
+use Dvsa\Olcs\Auth\Controller\Traits\Authenticate;
 use Zend\Mvc\Controller\AbstractActionController;
 use Zend\View\Model\ViewModel;
 use Dvsa\Olcs\Auth\Form\ResetPasswordForm;
@@ -19,6 +20,8 @@ use Dvsa\Olcs\Auth\Service\Auth\ResetPasswordService;
  */
 class ResetPasswordController extends AbstractActionController
 {
+    use Authenticate;
+
     /**
      * Reset password
      *
@@ -59,8 +62,15 @@ class ResetPasswordController extends AbstractActionController
 
         if ($result['status'] == 200) {
             $this->getServiceLocator()->get('Helper\FlashMessenger')->addSuccessMessage('auth.reset-password.success');
+
+            return $this->authenticate(
+                $result['username'],
+                $data['newPassword'],
+                function () {
                     return $this->redirect()->toRoute('auth/login');
                 }
+            );
+        }
 
         return $this->renderView($form, true, $result['message']);
     }
diff --git a/src/Controller/Traits/Authenticate.php b/src/Controller/Traits/Authenticate.php
new file mode 100644
index 0000000..f205ebb
--- /dev/null
+++ b/src/Controller/Traits/Authenticate.php
@@ -0,0 +1,55 @@
+<?php
+
+/**
+ * Authenticate
+ *
+ * @author Rob Caiger <rob@clocal.co.uk>
+ */
+namespace Dvsa\Olcs\Auth\Controller\Traits;
+
+use Dvsa\Olcs\Auth\Service\Auth\AuthenticationService;
+use Dvsa\Olcs\Auth\Service\Auth\LoginService;
+
+/**
+ * Authenticate
+ *
+ * @author Rob Caiger <rob@clocal.co.uk>
+ */
+trait Authenticate
+{
+    protected function authenticate($username, $password, $failureCallback)
+    {
+        $result = $this->getAuthenticationService()->authenticate($username, $password);
+
+        if ($result['status'] != 200) {
+            return $failureCallback($result);
+        }
+
+        if (isset($result['tokenId'])) {
+            return $this->getLoginService()
+                ->login($result['tokenId'], $this->getResponse());
+        }
+
+        return $this->redirect()->toRoute('auth/expired-password', ['authId' => $result['authId']]);
+    }
+
+    /**
+     * Get authentication service
+     *
+     * @return AuthenticationService
+     */
+    protected function getAuthenticationService()
+    {
+        return $this->getServiceLocator()->get('Auth\AuthenticationService');
+    }
+
+    /**
+     * Get login service
+     *
+     * @return LoginService
+     */
+    protected function getLoginService()
+    {
+        return $this->getServiceLocator()->get('Auth\LoginService');
+    }
+}
diff --git a/src/Service/Auth/AuthenticationService.php b/src/Service/Auth/AuthenticationService.php
index 34285c5..330da9b 100644
--- a/src/Service/Auth/AuthenticationService.php
+++ b/src/Service/Auth/AuthenticationService.php
@@ -30,12 +30,6 @@ class AuthenticationService extends AbstractRestService
         // At first we attempt to authenticate with a hashed password
         $response = $this->sendRequest($username, $password);
 
-        // If we are unsuccessful, we fallback to authentication without hashed password
-        // @todo Maybe remove all logic around hashing
-        //if ($response->getStatusCode() === 401) {
-        //    $response = $this->sendRequest($username, $password, false);
-        //}
-
         return $this->decodeContent($response);
     }
 
